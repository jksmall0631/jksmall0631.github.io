import{_ as j,c as S,a as n,w as T,o as _}from"./index-GIlGe_to.js";class m{constructor(t=0,s="Network Error"){this.status=t,this.text=s}}const R=()=>{if(!(typeof localStorage>"u"))return{get:e=>Promise.resolve(localStorage.getItem(e)),set:(e,t)=>Promise.resolve(localStorage.setItem(e,t)),remove:e=>Promise.resolve(localStorage.removeItem(e))}},r={origin:"https://api.emailjs.com",blockHeadless:!1,storageProvider:R()},p=e=>e?typeof e=="string"?{publicKey:e}:e.toString()==="[object Object]"?e:{}:{},H=(e,t="https://api.emailjs.com")=>{if(!e)return;const s=p(e);r.publicKey=s.publicKey,r.blockHeadless=s.blockHeadless,r.storageProvider=s.storageProvider,r.blockList=s.blockList,r.limitRate=s.limitRate,r.origin=s.origin||t},h=async(e,t,s={})=>{const a=await fetch(r.origin+e,{method:"POST",headers:s,body:t}),i=await a.text(),o=new m(a.status,i);if(a.ok)return o;throw o},g=(e,t,s)=>{if(!e||typeof e!="string")throw"The public key is required. Visit https://dashboard.emailjs.com/admin/account";if(!t||typeof t!="string")throw"The service ID is required. Visit https://dashboard.emailjs.com/admin";if(!s||typeof s!="string")throw"The template ID is required. Visit https://dashboard.emailjs.com/admin/templates"},E=e=>{if(e&&e.toString()!=="[object Object]")throw"The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/"},y=e=>e.webdriver||!e.languages||e.languages.length===0,w=()=>new m(451,"Unavailable For Headless Browser"),F=(e,t)=>{if(!Array.isArray(e))throw"The BlockList list has to be an array";if(typeof t!="string")throw"The BlockList watchVariable has to be a string"},V=e=>{var t;return!((t=e.list)!=null&&t.length)||!e.watchVariable},x=(e,t)=>e instanceof FormData?e.get(t):e[t],v=(e,t)=>{if(V(e))return!1;F(e.list,e.watchVariable);const s=x(t,e.watchVariable);return typeof s!="string"?!1:e.list.includes(s)},k=()=>new m(403,"Forbidden"),B=(e,t)=>{if(typeof e!="number"||e<0)throw"The LimitRate throttle has to be a positive number";if(t&&typeof t!="string")throw"The LimitRate ID has to be a non-empty string"},K=async(e,t,s)=>{const a=Number(await s.get(e)||0);return t-Date.now()+a},P=async(e,t,s)=>{if(!t.throttle||!s)return!1;B(t.throttle,t.id);const a=t.id||e;return await K(a,t.throttle,s)>0?!0:(await s.set(a,Date.now().toString()),!1)},L=()=>new m(429,"Too Many Requests"),M=async(e,t,s,a)=>{const i=p(a),o=i.publicKey||r.publicKey,c=i.blockHeadless||r.blockHeadless,d=i.storageProvider||r.storageProvider,u={...r.blockList,...i.blockList},b={...r.limitRate,...i.limitRate};return c&&y(navigator)?Promise.reject(w()):(g(o,e,t),E(s),s&&v(u,s)?Promise.reject(k()):await P(location.pathname,b,d)?Promise.reject(L()):h("/api/v1.0/email/send",JSON.stringify({lib_version:"4.4.1",user_id:o,service_id:e,template_id:t,template_params:s}),{"Content-type":"application/json"}))},q=e=>{if(!e||e.nodeName!=="FORM")throw"The 3rd parameter is expected to be the HTML form element or the style selector of the form"},N=e=>typeof e=="string"?document.querySelector(e):e,O=async(e,t,s,a)=>{const i=p(a),o=i.publicKey||r.publicKey,c=i.blockHeadless||r.blockHeadless,d=r.storageProvider||i.storageProvider,u={...r.blockList,...i.blockList},b={...r.limitRate,...i.limitRate};if(c&&y(navigator))return Promise.reject(w());const f=N(s);g(o,e,t),q(f);const l=new FormData(f);return v(u,l)?Promise.reject(k()):await P(location.pathname,b,d)?Promise.reject(L()):(l.append("lib_version","4.4.1"),l.append("service_id",e),l.append("template_id",t),l.append("user_id",o),h("/api/v1.0/email/send-form",l))},C={init:H,send:M,sendForm:O,EmailJSResponseStatus:m},D={methods:{sendEmail(){C.sendForm("service_hibrb5q","template_yise02r",this.$refs.form,{publicKey:"scPUUaLFPYnDb99n9"}).then(()=>{console.log("SUCCESS!")},e=>{console.log("FAILED...",e.text)})}}},U={class:"contact"};function A(e,t,s,a,i,o){return _(),S("div",U,[t[2]||(t[2]=n("h1",{class:"header"},"Contact Me",-1)),n("form",{class:"form",ref:"form",onSubmit:t[0]||(t[0]=T((...c)=>o.sendEmail&&o.sendEmail(...c),["prevent"]))},t[1]||(t[1]=[n("label",null,"Name",-1),n("input",{type:"text",name:"user_name"},null,-1),n("label",null,"Email",-1),n("input",{type:"email",name:"user_email"},null,-1),n("label",null,"Message",-1),n("textarea",{name:"message"},null,-1),n("input",{type:"submit",value:"Send"},null,-1)]),544)])}const I=j(D,[["render",A]]);export{I as default};
